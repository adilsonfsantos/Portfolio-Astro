// MEDIA QUERIES
@use "sass:math";
@use "sass:map";

@mixin viewport($size, $orientation: portrait, $width: width) {
  @if not(index(map-keys($grid-breakpoints-map), $size)) {
    @warn "Atenção: `#{$size}` não é um breakpoint válido.";
  } @else if $orientation == landscape {
    @media (min-width: #{map.get($grid-breakpoints-map, $size, $width)}) and (orientation: landscape) {
      @content;
    }
  } @else {
    @media (min-width: #{map.get($grid-breakpoints-map, $size, $width)}) {
      @content;
    }
  }
}

// ASPECT RATIO FOR LAZYLOAD IMAGES
@mixin aspect-ratio($width, $height) {
  padding-top: math.div($height, $width) * 100%;
}

// LAYOUT
@mixin flex {
  display: flex;
}

@mixin flex-column {
  flex-direction: column;
}

@mixin flex-center {
  align-items: center;
  justify-content: center;
}

@mixin grid {
  display: grid;
}

@mixin inline {
  display: inline-block;
}

@mixin grid-base() {
  @each $name, $width, $column, $margin in $grid-breakpoints-map {
    $grid-margin: #{map.get($grid-breakpoints-map, $name, margin)};

    @if $name == "default" {
      grid-template-columns: minmax(5vw, 1fr) minmax(0, $page-width) minmax(5vw, 1fr);
    } @else {
      @include viewport($name) {
        grid-template-columns: minmax($grid-margin, auto) minmax(0, $page-width) minmax($grid-margin, auto);
      }
    }
  }
}

@mixin grid-image {
  grid-template-columns:
    minmax(5vw, 1fr) minmax(0, 1024px) minmax(
      5vw,
      1fr
    );
}

@mixin layout-grid($size, $column: column, $gap: gap) {
  @if not(index(map-keys($grid-breakpoints-map), $size)) {
    @warn "Atenção: `#{size}` não é um breakpoint válido.";
  } @else {
    column-gap: #{map.get($grid-breakpoints-map, $size, $gap)};
grid-template-columns:
      repeat(
        #{map.get($grid-breakpoints-map, $size, $column)},
        minmax(0, 1fr)
      );
  }
}

@mixin grid-post {
  grid-template-columns: minmax(0, 680px);

  @include viewport(sm-small) {
    grid-template-columns: 1fr minmax(0, 680px) 1fr;
  }
}

// MARGINS
@mixin center-horizontal {
  margin: 0 auto;
}

@mixin center-vertical {
  margin: auto 0;
}

@mixin center {
  margin: auto;
}

// ANIMATION
@mixin transition(
  $name: all,
  $duration: $elevation-transition-duration,
  $speed: $animation-standard,
  $delay: 0ms
) {
  transition: $name $duration $speed $delay;
}

@mixin animation(
  $name,
  $duration: $elevation-transition-duration,
  $speed: $animation-standard,
  $loop: 1,
  $delay: 0ms
) {
  animation: $name $duration $speed $loop;
}

// FONT
@mixin typescale($size, $weight, $line) {
  font-size: #{map.get($type-map, $size, size)};

  @if $weight == "bold" {
    font-weight: 500;
  } @else if $weight == "normal" {
    font-weight: 300;
  } @else {
    @warn " Atenção: `#{$weight}` não é um valor válido.";
  }

  letter-spacing: #{map.get($type-map, $size, spacing)};

  @if $line == "headline" {
    line-height: 125%;
  } @else if $line == "text" {
    line-height: 150%;
  } @else {
    @warn " Atenção: `#{$line}` não é um valor válido.";
  }
}

@mixin font-primary {
  font-family:
    "Inter UI",
    -apple-system,
    BlinkMacSystemFont,
    "Helvetica Neue",
    Roboto,
    Arial,
    sans-serif,
    "Apple Color Emoji",
    "Segoe UI Emoji",
    "Segoe UI Symbol",
    "Noto Color Emoji";
}

@mixin font-position($position) {
  @if $position == center {
    text-align: center;
  } @else if $position == right {
    text-align: right;
  } @else if $position == left {
    text-align: left;
  }
}

// HELPER
@mixin absolute {
  content: "";
  height: 100%;
  inset: 0;
  position: absolute;
  width: 100%;
}

