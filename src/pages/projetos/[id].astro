---
import { getCollection, render } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Post from "@layouts/Post.astro";
import Default from "@layouts/Default.astro";

export async function getStaticPaths() {
	const posts = (await getCollection("projetos")).sort(
		(b, a) => a.data.date.valueOf() - b.data.date.valueOf(),
	);
	return posts.map((post, index) => ({
		params: { id: post.id },
		props: {
			post,
			prevPost: index + 1 !== posts.length ? posts[index + 1] : null,
			nextPost: index !== 0 ? posts[index - 1] : null,
		},
	}));
}

interface Props {
	post: CollectionEntry<"projetos">;
	prevPost: CollectionEntry<"projetos">;
	nextPost: CollectionEntry<"projetos">;
}

const { post, prevPost } = Astro.props;
const { Content } = await render(post);
---

<Default
	title={post.data.title}
	description={post.data.description}
	image={post.data.image}
>
	<Post {...post.data}>
		<Content />
	</Post>
	<section class="postnav grid__module--site">
		<div class="postnav--container">
			{
				(prevPost && (
					<a
						href={`/projetos/${prevPost.id}/`}
						class="postnav__link"
						rel="next"
					>
						Próximo projeto
						<br />
						<span class="postnav__link--title">
							{prevPost.data.title}
						</span>
					</a>
				)) || (
					<a href="/" class="postnav__link">
						Sem mais projetos →<br />
						<span class="postnav__link--title">
							Voltar para a home
						</span>
					</a>
				)
			}
		</div>
	</section></Default
>
